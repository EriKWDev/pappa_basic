#!/usr/local/bin/perl
#
# Script to generate command files for the Basic interpretator
#
# Syntax: (script) file.
#
# Will create one command.h file containing words, null separated. Double null
# is End of File.
# It will also if the word file has 2 keywords create a separate alias for that
# specific code.
#
# A dummy code file is also produced.
#
# MG Jan 6, 1996
#

$COM = "commands.h";
$COD = "codes.h";

open(COD, ">$COD") || die "Cannot create $COD\n";
open(COM, ">$COM") || die "Cannot create $COM\n";

print COD "/*\n";
print COD " * Autogenerated by fixcom.pl $COM file with functions\n";
print COD " * for the MG Basic in the camera project\n";
print COD " * Input file: $ARGV[0]\n";
print COD " */\n";
print COD "\n";
print COD "byte codes[] = {\"";

$cnr = 128;

while(<>)
{
  next if /^\s*#/;
  chop;
  @x = split;
  $word = $x[0];
  if (($x[1] ne "") && ($x[1] ne "#"))
  {
#    $eq .= sprintf("#define %-10s (0x%02x)\n", $x[1], ($cnr));
    printf COM "#define %-10s (0x%02x)\n", $x[1], ($cnr);
  }
  if ($cnt == 8)
  {
    print COD "\\\n";
    $cnt = 0;
  }
  $cnt++;
  print COD "$word\\0";
  printf COM "#define %-10s (0x%02x)\n", $word, ($cnr) if ($word =~ /^a-z.+/);

  $cnr++;
}
print COD "\\0\"};";
print COD "\n";

print COD "/*\n";
print COD " * Last codenumber is $cnr\n";
print COD " */\n";

print COM "/*\n";
print COM " * Last codenumber is $cnr\n";
print COM " */\n";

print "Last codenumber is $cnr\n";

close(COD);
close(COM);
